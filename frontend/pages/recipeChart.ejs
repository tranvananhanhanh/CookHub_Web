<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CookHub | Recipes Chart</title>

  <!-- Font -->
  <link href='https://fonts.googleapis.com/css?family=Plus Jakarta Sans' rel='stylesheet'>
  <script src="https://kit.fontawesome.com/da12da5f88.js" crossorigin="anonymous"></script>
  <!-- CSS -->
  <link rel="stylesheet" href="../assets/styles/styles.css">
  <link rel="stylesheet" href="../assets/styles/responsive.css">
  <!-- JavaScript -->
  <script src="../js/loadHTML.js" defer></script>

  <style>
    /* Reset and Base Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Arial', sans-serif;
      min-height: 100vh;
      background: linear-gradient(135deg, #f2f2dd, #e9812b, #eae7e7);
      position: relative;
      overflow-x: hidden;
    }

    /* Blurred Background Layer */
    .blur-bg {
      position: absolute;
      inset: 0;
      backdrop-filter: blur(24px);
      -webkit-backdrop-filter: blur(24px);
      pointer-events: none;
      z-index: 1;
    }

    .cookchart-container {
      position: relative;
      z-index: 2;
      max-width: 1200px;
      margin: 67px auto 0 auto;
      padding: 2rem;
    }

    /* Hero Section */
    .hero {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 4rem;
    }

    .hero-text {
      flex: 1 1 50%;
      padding-right: 2rem;
    }

    .hero-text span {
      flex: 1 1 50%;
      font-size: 2.5rem;
      color: #333;
      margin-bottom: 1rem;
    }

    .hero-text p {
      color: #3f3b3b;
      margin-bottom: 1.5rem;
    }

    .hero-buttons {
      display: flex;
      gap: 1rem;
      justify-content: center;
    }

    .hero-buttons button {
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 2rem;
      color: white;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .hero-buttons button.food-menu {
      background: #f0ba4c;
    }

    .hero-buttons button.food-menu:hover {
      background: #ef7708;
    }

    .hero-buttons button.book-table {
      background: #d9cfbf;
    }

    .hero-buttons button.book-table:hover {
      background: #f39807;
    }

    .hero-image {
      flex: 1 1 50%;
      display: flex;
      justify-content: flex-end;
    }

    .hero-image img {
      width: 300px;
      height: 300px;
      object-fit: cover;
      border-radius: 50%;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
      transition: transform 0.3s;
    }

    .hero-image img:hover {
      transform: scale(1.05);
    }

    /* Menu Highlight Section */
    .menu-highlight {
      margin-bottom: 4rem;
      text-align: center;
    }

    .menu-highlight h2 {
      font-size: 2rem;
      color: #333;
      margin-bottom: 2rem;
    }

    .menu-cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .menu-card {
      background: rgba(255, 255, 255, 0.7);
      backdrop-filter: blur(10px);
      border-radius: 1.5rem;
      padding: 1.5rem;
      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s, box-shadow 0.3s;
    }

    .menu-card.popular {
      transform: scale(1.1);
      z-index: 1;
    }

    .menu-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
    }

    .menu-card img {
      width: 140px;
      height: 140px;
      object-fit: cover;
      border-radius: 50%;
      margin: 0 auto 1rem;
      display: block;
    }

    .menu-card .rating {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0.5rem;
    }

    .menu-card .rating span {
      color: #FFD700;
      margin-right: 0.3rem;
    }

    .menu-card h3 {
      font-size: 1.25rem;
      color: #333;
      margin-bottom: 0.5rem;
    }

    .menu-card p {
      color: #666;
      font-size: 0.9rem;
      margin-bottom: 1rem;
    }

    .menu-card .price {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .menu-card .price span {
      font-size: 1.1rem;
      font-weight: bold;
      color: #333;
    }

    .menu-card .add-btn {
      width: 40px;
      height: 40px;
      background: #f4923d;
      color: white;
      border: none;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      transition: background 0.3s;
    }

    .menu-card .add-btn:hover {
      background: #f67905;
    }

    /* Feature Item Section */
    .feature-item {
      display: flex;
      flex-wrap: wrap;
      padding: 2rem;
      align-items: center;
    }

    .feature-image {
      flex: 1 1 50%;
      padding-right: 2rem;
    }

    .feature-image img {
      width: 100%;
      max-width: 400px;
      object-fit: cover;
      border-radius: 1rem;
    }

    .feature-text {
      flex: 1 1 50%;
    }

    .feature-text h2 {
      font-size: 2rem;
      color: #333;
      margin-bottom: 1rem;
    }

    .feature-text p {
      color: #666;
      line-height: 1.6;
    }

    .top-cheft-btn {
      background-color: #ff7d00;
      padding: 0.75rem 1.5rem;
      margin: 20px;
      border: none;
      border-radius: 2rem;
      color: white;
      font-size: 20px;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.3s;
      box-shadow: 0 0px 20px rgb(255 255 255 / 40%);
    }

    .top-cheft-btn p {
      display: inline-block;
      margin-right: 5px;
    }

    .top-cheft-btn:hover {
      background-color: #c66a15;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .hero {
        flex-direction: column;
        text-align: center;
      }

      .hero-text {
        padding-right: 0;
        margin-bottom: 2rem;
      }

      .hero-image {
        justify-content: center;
      }

      .hero-image img {
        width: 250px;
        height: 250px;
      }

      .menu-card.popular {
        transform: scale(1);
      }

      .feature-item {
        flex-direction: column;
        text-align: center;
      }

      .feature-image {
        padding-right: 0;
        margin-bottom: 1.5rem;
      }
    }
  </style>
</head>

<body>
  <div class="header"></div>

  <!-- <div class="blur-bg"></div> -->
  <div class="cookchart-container">
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-text">
        <span id="top1title"> </span>
        <p id="top1description"></p>
        <div class="hero-buttons">
          <button id="view-recipe-btn" class="food-menu">View detail</button>
          <button id="0" type="button" class="book-table">Save </button>
        </div>
      </div>
      <div class="hero-image">
        <img id="top1image" src="" alt="Poke Bowl">
      </div>
    </section>

    <!-- Top cheft Button -->
    <button id="cheftchart" class="top-cheft-btn" >

      <p>Top cheft chart</p>
      <i class="fa-solid fa-arrow-right-long"></i>
    </button>

    <!-- Menu Highlight Section -->
    <section class="menu-highlight">
      <h2>Top Recipe ‚Äì Lets explore with us</h2>
      <div class="menu-cards">
        <div id="view-2" class="menu-card">
          <img src="" alt="top2">
          <div class="rating">
            <span>‚≠ê</span>
          </div>
          <h3></h3>
          <p></p>
          <div class="price">
            <button type="button" id="1" class="add-btn">+</button>
          </div>
        </div>
        <div  id="view-3" class="menu-card popular">
          <img src="" alt="Signature Poke">
          <div class="rating">
            <span>‚≠ê</span>
          </div>
          <h3></h3>
          <p></p>
          <div class="price">
            <button type="button" id="2" class="add-btn">+</button>
          </div>
        </div>
        <div id="view-4" class="menu-card">
          <img src="" alt="Veggie Delight">
          <div class="rating">
            <span>‚≠ê</span>
          </div>
          <h3></h3>
          <p></p>
          <div class="price">
            <button type="button" id="3" class="add-btn">+</button>
          </div>
        </div>
      </div>
    </section>

    <!-- Feature Item Section -->
    <section class="feature-item">
      <div class="feature-image">
        <img id="top5image" src="" alt="French Fries" " />

      </div>
      <div class="feature-text">
        <h2 id="top5title">Best Potatoes For French Fries</h2>
        <p id="top5description"></p>
      </div>
    </section>
  </div>

  <div class="footer"></div>

  <script>
    let recipes = []; // Initialize as array for recipe list

    async function fetchRecipes() {
      try {
        const response = await fetch("/cookchart/top-recipes", {
          mode: "cors",
          credentials: "same-origin",
          headers: { "Accept": "application/json" }
        });
        const data = await response.json();
        if (data && data.success && data.data) {
          const urlParams = new URLSearchParams(window.location.search);
          const userId = urlParams.get('userId'); // L·∫•y userId t·ª´ URL hi·ªán t·∫°i
          document.getElementById("cheftchart").addEventListener("click", function () {
            window.location.href = `http://localhost:4000/top-chefs-page?userId=${userId}`;

  });

 
       
          console.log("TOP RECIPES:", data.data.slice(1, 4)); // üëâ In ra console backend
          updateTop1RecipeInfo(data.data[0]); // ‚úÖ Move call here
          updateTop5RecipeInfo(data.data[4]);
          updateMenuHighlight(data.data.slice(1, 4));
          goToRecipeDetail(data.data[0],"view-recipe-btn",userId);
          setupSaveButton("0",userId,data.data[0]);
          setupSaveButton("1",userId,data.data[1]);
          setupSaveButton("2",userId,data.data[2]);
          setupSaveButton("3",userId,data.data[3]);

          goToRecipeDetail(data.data[1],"view-2",userId);
          goToRecipeDetail(data.data[2],"view-3",userId);
          goToRecipeDetail(data.data[3],"view-4",userId);
          goToRecipeDetail(data.data[4],"top5image",userId);



        } else {
          console.error('Invalid API response:', data);
        }
      } catch (error) {
        console.error('Error fetching recipes:', error);
      }
    }

    function setupSaveButton(buttonId, userId, recipe) {
      const recipeId=recipe.recipe_id;
      const button = document.getElementById(buttonId);
      if (!button) {
        console.error(`Kh√¥ng t√¨m th·∫•y button v·ªõi id: ${buttonId}`);
        return;
      }

      button.addEventListener("click", async (event) => {
        event.preventDefault(); // NgƒÉn h√†nh vi m·∫∑c ƒë·ªãnh nh∆∞ chuy·ªÉn trang ho·∫∑c submit
        event.stopPropagation(); // NgƒÉn lan truy·ªÅn s·ª± ki·ªán

        try {
          const response = await fetch("http://localhost:4000/detailrecipe", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              user_id: parseInt(userId,10),
              recipe_id: parseInt(recipeId,10),
            }),
          });

          const result = await response.json();
          if (response.ok) {
            alert("ƒê√£ l∆∞u c√¥ng th·ª©c th√†nh c√¥ng!");
          } else {
            alert("L·ªói khi l∆∞u: " + result.message);
          }
        } catch (err) {
          console.error("L·ªói k·∫øt n·ªëi:", err);
          alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi m√°y ch·ªß.");
        }
      });
    }

    
    function goToRecipeDetail(topRecipe, recipe_htmlid, userId) {
      const recipe_html = document.getElementById(recipe_htmlid);
      const recipeId = topRecipe.recipe_id;

      if (recipeId && recipe_html) {
        recipe_html.addEventListener('click', () => {
          window.location.href = `/detailrecipe-page?recipe_id=${recipeId}&userId=${userId}`;
        });
      } else {
        console.error("Kh√¥ng c√≥ recipe_id ho·∫∑c ph·∫ßn t·ª≠ HTML kh√¥ng t·ªìn t·∫°i.");
      }
    }







 
    function updateTop1RecipeInfo(topRecipe) {
      if (!topRecipe) return;
      const titleElement = document.getElementById("top1title");
      const descElement = document.getElementById("top1description");
      const imageElement = document.getElementById("top1image");

      if (imageElement && topRecipe.thumbnail) {
        imageElement.src = `../assets/image/recipes/${topRecipe.recipe_id}/${topRecipe.thumbnail}`;
        imageElement.alt = topRecipe.title;
      }


      if (titleElement) {
        titleElement.innerHTML = `ü•á${topRecipe.title} Week‚Äôs Champion`;
      }

      if (descElement) {
        descElement.innerHTML = `Topping the cook chart this week,made by <strong>${topRecipe.author_name}</strong>, <strong>${topRecipe.title}</strong> has captured not only taste buds but also hearts with its irresistible aroma and visually stunning presentation. With a perfect blend of high-quality ingredients and a unique cooking method, <strong>${topRecipe.title}</strong> delivers an unforgettable culinary experience. Even just one bite leaves a lasting impression ‚Äî a flavor that lingers long after the meal is over.`;
      }
    }

    function updateTop5RecipeInfo(topRecipe) {
      if (!topRecipe) return;
      const titleElement = document.getElementById("top5title");
      const descElement = document.getElementById("top5description");
      const imageElement = document.getElementById("top5image");

      if (imageElement && topRecipe.thumbnail) {
        imageElement.src = `../assets/image/recipes/${topRecipe.recipe_id}/${topRecipe.thumbnail}`;
        imageElement.alt = topRecipe.title;
      }


      if (titleElement) {
        titleElement.innerHTML = `${topRecipe.title} `;
      }

      if (descElement) {
        descElement.innerHTML = `${topRecipe.description}`;
      }
    }

    function escapeHTML(str) {
      const div = document.createElement('div');
      div.textContent = str;
      return div.innerHTML;
    }

    function isValidURL(str) {
      try {
        new URL(str);
        return true;
      } catch (_) {
        return false;
      }
    }

    function updateMenuHighlight(recipes) {
      const cards = document.querySelectorAll(".menu-card");
      cards.forEach((card, index) => {
        if (!recipes[index]) return;
        const recipe = recipes[index];
        const img = card.querySelector("img");
        const ratingSpan = card.querySelector(".rating");
        const title = card.querySelector("h3");
        const description = card.querySelector("p");
        const priceSpan = card.querySelector(".price span");

        const recipeTitle = escapeHTML(recipe.title ?? 'Unknown Recipe');
        const recipeDesc = escapeHTML(recipe.description ?? 'Tasty and delicious!');
        const recipeRating = Number(recipe.average_rating);
        const recipePrice = Number(recipe.cooking_time);
        const recipeImage = recipe.thumbnail

        if (img) {
          img.src = `../assets/image/recipes/${recipe.recipe_id}/${recipeImage}`;
          img.alt = recipeTitle;
        }
        if (ratingSpan) ratingSpan.innerHTML = `<span>‚≠ê</span> ${recipeRating}`;
        if (title) title.textContent = recipeTitle;
        if (description) description.textContent = recipeDesc;
        if (priceSpan) priceSpan.textContent = `$${recipePrice}`;
      });
    }


    fetchRecipes();









  </script>
</body>

</html>